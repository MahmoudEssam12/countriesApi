{"version":3,"file":"static/js/204.b1b9c4ba.chunk.js","mappings":"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","sources":["components/CountryDetails/CountryDetails.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport \"./CountryDetails.scss\";\r\n\r\nfunction CountryDetails({ countries, setSearchCountries }) {\r\n  let params = useParams();\r\n  let location = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [currencies, setCurrencies] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [country, setCountry] = useState({});\r\n  const [neighbors, setNeighbors] = useState([{}]);\r\n  const navigate = useNavigate();\r\n\r\n  const goBack = () => {\r\n    navigate(-1);\r\n    setSearchCountries(countries);\r\n  };\r\n\r\n  const numberWithCommas = (x) => {\r\n    return x?.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n  useEffect(() => {\r\n    console.log(\r\n      `https://restcountries.com/v3.1/name/${params.countryName}?fullText=true`\r\n    );\r\n    axios\r\n      .get(\r\n        `https://restcountries.com/v3.1/name/${params.countryName}?fullText=true`\r\n      )\r\n      .then((res) => {\r\n        setCountry(res.data[0]);\r\n        console.log(res);\r\n        if (res.data[0].borders) {\r\n          axios\r\n            .get(\r\n              `https://restcountries.com/v3.1/alpha?codes=${res.data[0].borders.join(\r\n                \",\"\r\n              )}`\r\n            )\r\n            .then((data) => {\r\n              const palestine = {\r\n                name: {\r\n                  common: \"Palestine\",\r\n                },\r\n              };\r\n              const deleted = data.data.findIndex(\r\n                (country) => country.name.common === \"Israel\"\r\n              );\r\n              if (deleted !== -1) {\r\n                data.data.splice(deleted, deleted, palestine);\r\n              }\r\n              setNeighbors(data.data);\r\n            });\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location]);\r\n  useEffect(() => {\r\n    if (country) {\r\n      for (let key in country?.currencies) {\r\n        setCurrencies([\r\n          {\r\n            name: country.currencies[key].name,\r\n            symbol: country.currencies[key].symbol,\r\n          },\r\n        ]);\r\n      }\r\n      for (let key in country?.languages) {\r\n        setLanguages([\r\n          {\r\n            name: country.languages[key],\r\n          },\r\n        ]);\r\n      }\r\n    }\r\n  }, [country]);\r\n\r\n  return (\r\n    <div className=\"country-wrapper\">\r\n      {loading && <Loading />}\r\n\r\n      <div className=\"container\">\r\n        <button className=\"back-btn\" onClick={goBack}>\r\n          <i className=\"fa-solid fa-arrow-left-long\"></i>Back\r\n        </button>\r\n\r\n        <div className=\"country-details\">\r\n          <div className=\"flag\">\r\n            <img src={country?.flags?.png} alt={country?.name?.common} />\r\n          </div>\r\n          <div className=\"info\">\r\n            <h1>{country?.name?.common}</h1>\r\n            <ul>\r\n              <li>\r\n                <strong>Native Name:</strong>{\" \"}\r\n                <span>{country?.name?.official || \"none\"}</span>\r\n              </li>\r\n              <li>\r\n                <strong>population:</strong>{\" \"}\r\n                <span>{numberWithCommas(country?.population)}</span>\r\n              </li>\r\n              <li>\r\n                <strong>region:</strong> <span>{country?.region}</span>\r\n              </li>\r\n              <li>\r\n                <strong>sub region:</strong>{\" \"}\r\n                <span>{country?.subregion || \"none\"}</span>\r\n              </li>\r\n              <li>\r\n                <strong>capital:</strong>{\" \"}\r\n                <span>{country?.capital || \"none\"}</span>\r\n              </li>\r\n              <li>\r\n                <strong>currencies:</strong>{\" \"}\r\n                {currencies.map((curr, index) => (\r\n                  <span key={index}>\r\n                    {curr.name || \"none\"}({curr.symbol})\r\n                  </span>\r\n                ))}\r\n              </li>\r\n              <li>\r\n                <strong>languages:</strong>{\" \"}\r\n                {languages?.map((lang, index) => (\r\n                  <span key={index}>{lang.name || \"none\"}</span>\r\n                ))}\r\n              </li>\r\n            </ul>\r\n            <div className=\"borders\">\r\n              <strong>border countries: </strong>\r\n              {country.borders &&\r\n                country?.borders\r\n                  ?.filter((border) => border !== \"ISR\")\r\n                  .map((border, index) => {\r\n                    return (\r\n                      <Link\r\n                        to={`/countryDetails/${neighbors[index]?.name?.common}`}\r\n                        key={index}\r\n                      >\r\n                        <div className=\"border-country\">\r\n                          {neighbors[index]?.name?.common || border || \"none\"}\r\n                        </div>\r\n                      </Link>\r\n                    );\r\n                  })}\r\n              {!country?.borders && (\r\n                <div style={{ fontWeight: \"800\" }}>None It's an Island</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryDetails;\r\n"],"names":["x","countries","setSearchCountries","params","useParams","location","useLocation","useState","loading","setLoading","currencies","setCurrencies","languages","setLanguages","country","setCountry","neighbors","setNeighbors","navigate","useNavigate","useEffect","console","log","countryName","axios","then","res","data","borders","join","deleted","findIndex","name","common","splice","catch","err","key","symbol","className","Loading","onClick","src","flags","png","alt","official","population","toString","replace","region","subregion","capital","map","curr","index","lang","filter","border","to","style","fontWeight"],"sourceRoot":""}